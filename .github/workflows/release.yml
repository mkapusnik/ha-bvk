name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: HACS validation
        uses: "hacs/action@main"
        with:
          category: "integration"
          ignore: "brands"

      - name: Get version
        id: version
        run: |
          version=$(grep -oP '(?<="version": ")[^"]*' custom_components/bvk/manifest.json)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "Version: $version"

      - name: Check if release exists
        id: check_release
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/v${{ steps.version.outputs.version }}"; then
            echo "release_exists=true" >> $GITHUB_OUTPUT
            echo "Release v${{ steps.version.outputs.version }} already exists"
          else
            echo "release_exists=false" >> $GITHUB_OUTPUT
            echo "Release v${{ steps.version.outputs.version }} does not exist yet"
          fi

      - name: Create Release
        id: create_release
        if: steps.check_release.outputs.release_exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          body: |
            Release of version ${{ steps.version.outputs.version }}

            This release was automatically created by GitHub Actions when changes were pushed to the master branch.
            It is compatible with HACS and can be installed as a custom repository.
